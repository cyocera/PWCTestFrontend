{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/common\";\nfunction LayoutComponent_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function LayoutComponent_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(2);\n      return i0.ɵɵresetView(_r0.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 6);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LayoutComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n}\nLayoutComponent.ɵfac = function LayoutComponent_Factory(t) {\n  return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\nLayoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LayoutComponent,\n  selectors: [[\"app-layout\"]],\n  standalone: true,\n  features: [i0.ɵɵStandaloneFeature],\n  decls: 19,\n  vars: 12,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-list-item\", \"\", \"href\", \"#\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function LayoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"mat-toolbar\");\n      i0.ɵɵtext(7, \"Menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 3);\n      i0.ɵɵtext(10, \"Dashboard\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"mat-sidenav-content\")(12, \"mat-toolbar\");\n      i0.ɵɵtemplate(13, LayoutComponent_button_13_Template, 3, 0, \"button\", 4);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementStart(15, \"span\");\n      i0.ɵɵtext(16, \"PwcExam\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"h1\");\n      i0.ɵɵtext(18, \"hola mundo\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 10, ctx.isHandset$));\n    }\n  },\n  dependencies: [LayoutModule, MatToolbarModule, i2.MatToolbar, MatButtonModule, i3.MatIconButton, MatSidenavModule, i4.MatSidenav, i4.MatSidenavContainer, i4.MatSidenavContent, MatIconModule, i5.MatIcon, MatListModule, i6.MatNavList, i6.MatListItem, CommonModule, i7.NgIf, i7.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 200px;\\n}\\n\\n.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.mat-sidenav-content[_ngcontent-%COMP%] {\\n  padding: 5px 5px 5px 10px;\\n}\\n\\n.mat-sidenav[_ngcontent-%COMP%] {\\n  top: 5px !important;\\n  bottom: 5px !important;\\n  left: 5px !important;\\n  border-radius: 10px;\\n}\\n\\n.mat-toolbar[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n}\\n\\n.mat-sidenav-container[_ngcontent-%COMP%] {\\n  background-color: white;\\n}\\n/*# sourceURL=webpack://./src/app/components/layout/layout.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvbGF5b3V0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtFQUNBLHNCQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLHVCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZW5hdi1jb250YWluZXIge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5zaWRlbmF2IHtcbiAgd2lkdGg6IDIwMHB4O1xufVxuXG4uc2lkZW5hdiAubWF0LXRvb2xiYXIge1xuICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xufVxuXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5tYXQtc2lkZW5hdi1jb250ZW50IHtcbiAgcGFkZGluZzogNXB4IDVweCA1cHggMTBweDtcbn1cblxuLm1hdC1zaWRlbmF2IHtcbiAgdG9wOiA1cHggIWltcG9ydGFudDtcbiAgYm90dG9tOiA1cHggIWltcG9ydGFudDtcbiAgbGVmdDogNXB4ICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5tYXQtdG9vbGJhciB7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG59XG5cbi5tYXQtc2lkZW5hdi1jb250YWluZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAA6BA,WAAW,QAAQ,qBAAqB;AAErE,SAASC,GAAG,EAAEC,WAAW,QAAQ,gBAAgB;AAEjD,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,YAAY,QAAQ,iBAAiB;;;;;;;;;;;;ICCxCC,iCAK6B;IAD3BA;MAAAA;MAAAA;MAAA;MAAA,OAASA,2BAAe;IAAA,EAAC;IAEzBA,mCAA4C;IAAAA,oBAAI;IAAAA,iBAAW;;;ADanE,OAAM,MAAOC,eAAe;EAQ1BC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IANtC,eAAU,GAAwB,IAAI,CAACA,kBAAkB,CAACC,OAAO,CAACd,WAAW,CAACe,OAAO,CAAC,CACnFC,IAAI,CACHf,GAAG,CAACgB,MAAM,IAAIA,MAAM,CAACC,OAAO,CAAC,EAC7BhB,WAAW,EAAE,CACd;EAE0D;;AARlDS,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC/B5Bf,gDAAiD;;;;MAK7CA,mCAAa;MAAAA,oBAAI;MAAAA,iBAAc;MAC/BA,oCAAc;MACcA,0BAAS;MAAAA,iBAAI;MAG3CA,4CAAqB;MAEjBA,wEAOS;;MACTA,6BAAM;MAAAA,wBAAO;MAAAA,iBAAO;MAEGA,2BAAI;MAAAA,2BAAU;MAAAA,iBAAK;;;MAnB1CA,eAA+C;MAA/CA,6EAA+C;MAD/CA,sFAA4D;MAezDA,gBAAwB;MAAxBA,6DAAwB;;;iBDC7BP,YAAY,EACZC,gBAAgB,iBAChBC,eAAe,oBACfC,gBAAgB,+DAChBC,aAAa,cACbC,aAAa,iCACbC,YAAY;EAAAiB;AAAA","names":["Breakpoints","map","shareReplay","LayoutModule","MatToolbarModule","MatButtonModule","MatSidenavModule","MatIconModule","MatListModule","CommonModule","i0","LayoutComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","selectors","standalone","features","decls","vars","consts","template","styles"],"sourceRoot":"","sources":["C:\\Users\\AlvaroHidalgoDiaz\\Documents\\Code\\PwcExam\\src\\app\\components\\layout\\layout.component.ts","C:\\Users\\AlvaroHidalgoDiaz\\Documents\\Code\\PwcExam\\src\\app\\components\\layout\\layout.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from 'src/app/modules';\n\n\n@Component({\n  standalone : true,\n  imports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    CommonModule,\n    HomeComponent\n  ],\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Dashboard</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>PwcExam</span>\n    </mat-toolbar>\n    <!-- Add Content Here --><h1>hola mundo</h1>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}